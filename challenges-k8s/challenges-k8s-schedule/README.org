* Kubernetes Scheduling                                             :Concept:
:PROPERTIES:
:type:     schedule
:END:

#+BEGIN_HTML
<a href="https://github.com/dennyzhang/challenges-kubernetes/tree/master/challenges-k8s-schedule"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>

<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

Blog URL: https://kubernetes.dennyzhang.com/challenges-k8s-schedule, Category: [[https://kubernetes.dennyzhang.com/category/concept][concept]]

File me [[https://github.com/DennyZhang/kubernetes-security-practice/issues][Issues]] or star [[https://github.com/DennyZhang/kubernetes-security-practice][this repo]].

See more Kubernetes sharing from Denny: [[https://github.com/topics/denny-kubernetes][denny-kubernetes]]

** Questions
*** How Resource Quota is implemented for CPU millicores
*** How Resource Quota is implemented for disk usage
*** What bootID and machineID are in "kubectl get node -o yaml"?
*** Pod Disruption Budgets are your friends.
https://hackernoon.com/top-10-kubernetes-tips-and-tricks-27528c2d0222
*** What are the capabilities of adminission controller?
*** Cant I limit how much disk capcity one namespace can use?
*** What Automatic binpacking mean?
https://kubernetes.io/
#+BEGIN_EXAMPLE
Automatic binpacking

Automatically places containers based on their resource requirements
and other constraints, while not sacrificing availability. Mix
critical and best-effort workloads in order to drive up utilization
and save even more resources.
#+END_EXAMPLE
*** How it applies to VSphere?
*** #  --8<-------------------------- separator ------------------------>8-- :noexport:
*** DONE "kubectl drain" vs "kubectl cordon"?
    CLOSED: [2018-10-02 Tue 20:11]
- kubectl drain: safely evict all of your pods from a node before you perform maintenance on the node 
- kubectl cordon: Marking a node as unschedulable prevents new pods from being scheduled to that node, but does not affect any existing pods on the node. This is useful as a preparatory step before a node reboot, etc.
https://kubernetes.io/docs/tasks/administer-cluster/safely-drain-node/
** Summary
| Name                                 | Summary                                                                               |
|--------------------------------------+---------------------------------------------------------------------------------------|
| [[https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/][Pod Priority and Preemption]]          | Not all pods are equally important                                                    |
| Pod Affinity/Anti-Affinity           | set rules on which nodes are selected by the scheduler                                |
| Dedicated nodes (taints/tolerations) | taint a node thus no pods can schedule onto it unless a pod explicitly "tolerates" it |
| Resource Quotas                      |                                                                                       |
| Limit Ranges                         |                                                                                       |
| Handler: PreStop & PostStart         |                                                                                       |
| Reserve/Limits                       |                                                                                       |

#+BEGIN_EXAMPLE
https://kubernetes.io/docs/concepts/overview/components/#kube-scheduler

Factors taken into account for scheduling decisions include individual
and collective resource requirements, hardware/software/policy
constraints, affinity and anti-affinity specifications, data locality,
inter-workload interference and deadlines
#+END_EXAMPLE
** CRI: Container Runtime
| Name          | Summary                    |
|---------------+----------------------------|
| docker        | https://www.docker.com/    |
| rkt           | https://github.com/rkt/rkt |
| containerd    | https://containerd.io/     |
| cri-I         |                            |
| katacontainer |                            |
| CRX           |                            |

** Node condition
| Name               | Summary                                                              |
|--------------------+----------------------------------------------------------------------|
| OutOfDisk          | whether insufficient free space on the node for adding new pods      |
| Ready              | whether node is healthy and ready to accept pods: true/false/unknown |
| MemoryPressure     | whether pressure exists on the node memory                           |
| PIDPressure        | whether pressure exists on the processes                             |
| DiskPressure       | whether pressure exists on the disk size                             |
| NetworkUnavailable | whether the network for the node is not correctly configured         |
| ConfigOK           | whether the kubelet is correctly configured                          |
[[https://kubernetes.io/docs/concepts/architecture/nodes/#condition][link: Nodes - Condition]]
** k8s on bare metal
Hyper-Converged Infrastructure

https://www.vmware.com/products/hyper-converged-infrastructure/dell-emc-vxrail.html
** CCM(Cloud controller manager)
https://kubernetes.io/docs/concepts/architecture/cloud-controller
** Reserve: Tell k8s your estimation for resource usage(CPU/RAM) per Pod
https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/

https://kubernetes.io/docs/concepts/policy/resource-quotas/#requests-vs-limits

#+BEGIN_EXAMPLE
Each Container of a Pod can specify one or more of the following:

spec.containers[].resources.limits.cpu
spec.containers[].resources.limits.memory
spec.containers[].resources.requests.cpu
spec.containers[].resources.requests.memory
#+END_EXAMPLE

#+BEGIN_EXAMPLE
apiVersion: v1
kind: Pod
metadata:
  name: frontend
spec:
  containers:
  - name: db
    image: mysql
    env:
    - name: MYSQL_ROOT_PASSWORD
      value: "password"
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "128Mi"
        cpu: "500m"
  - name: wp
    image: wordpress
    resources:
      requests:
        memory: "64Mi"
        cpu: "250m"
      limits:
        memory: "128Mi"
        cpu: "500m"
#+END_EXAMPLE
** KubeVirt: a Kubernetes addon that provides users the ability to schedule traditional virtual machine workloads side by side with container workloads. 
https://kubernetes.io/blog/2018/07/27/kubevirt-extending-kubernetes-with-crds-for-virtualized-workloads/
** More Resources
#+BEGIN_HTML
<a href="https://www.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>

<a href="https://www.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/dns_small.png"></a>
#+END_HTML
** org-mode configuration                                          :noexport:
 #+STARTUP: overview customtime noalign logdone showall
 #+DESCRIPTION: 
 #+KEYWORDS: 
 #+AUTHOR: Denny Zhang
 #+EMAIL:  denny@dennyzhang.com
 #+TAGS: noexport(n)
 #+PRIORITIES: A D C
 #+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
 #+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
 #+EXPORT_EXCLUDE_TAGS: exclude noexport
 #+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
 #+LINK_UP:   
 #+LINK_HOME: 
* TODO Difficulties deploying windows based workloads              :noexport:
* #  --8<-------------------------- separator ------------------------>8-- :noexport:
* Blog: Kubernetes node lifecycle management
** node affinity and anti-affinity
** mark node as unschedulable
- kubectl drain: safely evict all of your pods from a node before you perform maintenance on the node 
- kubectl cordon: Marking a node as unschedulable prevents new pods from being scheduled to that node, but does not affect any existing pods on the node. This is useful as a preparatory step before a node reboot, etc.
** Protect master node from platform admin
** useful link
https://banzaicloud.com/blog/drain/
* TODO Question: kubectl drain node, why not achieve HA?           :noexport:
