* Deep Dive Into Kubernetes Source Code                             :Concept:
:PROPERTIES:
:type:     code
:END:

#+BEGIN_HTML
<a href="https://github.com/dennyzhang/challenges-kubernetes/tree/master/challenges-k8s-sourcecode"><img align="right" width="200" height="183" src="https://www.dennyzhang.com/wp-content/uploads/denny/watermark/github.png" /></a>

<div id="the whole thing" style="overflow: hidden;">
<div style="float: left; padding: 5px"> <a href="https://www.linkedin.com/in/dennyzhang001"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/linkedin.png" alt="linkedin" /></a></div>
<div style="float: left; padding: 5px"><a href="https://github.com/dennyzhang"><img src="https://www.dennyzhang.com/wp-content/uploads/sns/github.png" alt="github" /></a></div>
<div style="float: left; padding: 5px"><a href="https://www.dennyzhang.com/slack" target="_blank" rel="nofollow"><img src="https://slack.dennyzhang.com/badge.svg" alt="slack"/></a></div>
</div>

<br/><br/>
<a href="http://makeapullrequest.com" target="_blank" rel="nofollow"><img src="https://img.shields.io/badge/PRs-welcome-brightgreen.svg" alt="PRs Welcome"/></a>
#+END_HTML

Blog URL: https://kubernetes.dennyzhang.com/challenges-k8s-sourcecode, Category: [[https://kubernetes.dennyzhang.com/category/concept][concept]]

File me [[https://github.com/DennyZhang/kubernetes-security-practice/issues][Issues]] or star [[https://github.com/DennyZhang/kubernetes-security-practice][this repo]].

See more Kubernetes sharing from Denny: [[https://github.com/topics/denny-kubernetes][denny-kubernetes]]
** Code Structure
| Name                 | Summary                                                                |
|----------------------+------------------------------------------------------------------------|
| Cloud provider       | [[https://github.com/kubernetes/kubernetes/tree/cd06419973297dd1f65d1e47e9a3363bfbbcc899/pkg/cloudprovider/providers][kubernetes/pkg/cloudprovider/providers]]                                 |
| kubelet.go           | [[https://github.com/kubernetes/kubernetes/blob/cd06419973297dd1f65d1e47e9a3363bfbbcc899/pkg/kubelet/kubelet.go][kubernetes/pkg/kubelet/kubelet.go]]                                      |
| CRD                  | [[https://github.com/kubernetes/kubernetes/tree/cd06419973297dd1f65d1e47e9a3363bfbbcc899/staging/src/k8s.io/apiextensions-apiserver/pkg/registry/customresource][staging/src/k8s.io/apiextensions-apiserver/pkg/registry/customresource]] |
| kubectl              | [[https://github.com/kubernetes/kubernetes/tree/cd06419973297dd1f65d1e47e9a3363bfbbcc899/pkg/kubectl][kubernetes/pkg/kubectl]]                                                 |
| kubectl describe pod | [[https://github.com/kubernetes/kubernetes/blob/cd06419973297dd1f65d1e47e9a3363bfbbcc899/pkg/printers/internalversion/describe.go][kubernetes/pkg/printers/internalversion/describe.go]]                    |

** Align Up With Upstream
| Name            | Summary                                                                                 |
|-----------------+-----------------------------------------------------------------------------------------|
| Release Note    | https://kubernetes.io/docs/setup/release/notes/                                         |
| Milestones      | https://github.com/kubernetes/kubernetes/milestones?direction=asc&sort=title&state=open |
| Design Proposal | https://github.com/kubernetes/community/tree/master/contributors/design-proposals       |
| Open Tickets    | https://github.com/kubernetes/kubernetes/issues                                         |

** Questions
*** Allows all containers in a pod to share a process namespace
[[https://github.com/kubernetes/kubernetes/blob/9edf196c017c12ade054f6b5ecdc7ffcb66ee94d/pkg/features/kube_features.go#L117][kubernetes/pkg/features/kube_features.go]]
*** why describe pod is multiple API calls
*** How often k8s perodically check the desired state?
Once you've set your desired state, the Kubernetes Control Plane works to make the cluster's current state match the desired state.

https://kubernetes.io/docs/concepts/

A Kubernetes object is a "record of intent"-once you create the object, the Kubernetes system will constantly work to ensure that object exists.

https://kubernetes.io/docs/concepts/overview/working-with-objects/kubernetes-objects/
** k8s go client
*** pod watch interface
client-go/kubernetes/typed/core/v1/pod.go
*** pod put and pod patch
client-go/kubernetes/typed/core/v1/pod.go
*** Start a pod and run a REST kubelet API call
client-go/rest/config.go
** controller demo
https://github.com/aaronlevy/kube-controller-demo
** More Resources
#+BEGIN_HTML
<a href="https://www.dennyzhang.com"><img align="right" width="201" height="268" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/denny_201706.png"></a>

<a href="https://www.dennyzhang.com"><img align="right" src="https://raw.githubusercontent.com/USDevOps/mywechat-slack-group/master/images/dns_small.png"></a>
#+END_HTML
* org-mode configuration                                           :noexport:
#+STARTUP: overview customtime noalign logdone showall
#+DESCRIPTION: 
#+KEYWORDS: 
#+AUTHOR: Denny Zhang
#+EMAIL:  denny@dennyzhang.com
#+TAGS: noexport(n)
#+PRIORITIES: A D C
#+OPTIONS:   H:3 num:t toc:nil \n:nil @:t ::t |:t ^:t -:t f:t *:t <:t
#+OPTIONS:   TeX:t LaTeX:nil skip:nil d:nil todo:t pri:nil tags:not-in-toc
#+EXPORT_EXCLUDE_TAGS: exclude noexport
#+SEQ_TODO: TODO HALF ASSIGN | DONE BYPASS DELEGATE CANCELED DEFERRED
#+LINK_UP:   
#+LINK_HOME: 
* TODO Blog: Catch up with k8s upstream                            :noexport:
** Check k8s code to get all feature candidates
https://github.com/kubernetes/kubernetes/blob/master/pkg/features/kube_features.go#L369-L437
** Check Release Notes
** Dig out how the feature is implemented
- Google: github "Enable container log rotation for cri container runtime"
- Find ticket link
- Find PR link

https://github.com/kubernetes/kubernetes/pull/59898/files
Add CRI container log rotation support

** Google for Github and kubernetes.io website
** How I know whether I'm using a minor feature which might get deprecated?
** TODO Try minikube for latest k8s
** Where to get help: https://kubernetes.io/docs/tasks/debug-application-cluster/troubleshooting/
** Try in GKE
* k8s go client                                                    :noexport:
** events
https://github.com/kubernetes/client-go/blob/master/listers/core/v1/event.go
** TODO Client-go does not use a Swagger generator. Instead, it uses source code generators
source code generators are originated from the Kubernetes project, to create Kubernetes-style API objects and serializers.

https://medium.com/programming-kubernetes/building-stuff-with-the-kubernetes-api-part-4-using-go-b1d0e3c1c899
** sample: subscribe to events
#+BEGIN_SRC go
    ch := watcher.ResultChan()

    fmt.Printf("--- PVC Watch (max claims %v) ----\n", maxClaimedQuant.String())
    for event := range ch {
	pvc, ok := event.Object.(*v1.PersistentVolumeClaim)
	if !ok {
		log.Fatal("unexpected type")
	}
	quant := pvc.Spec.Resources.Requests[v1.ResourceStorage]

	switch event.Type {
	case watch.Added:
		totalClaimedQuant.Add(quant)
		log.Printf("PVC %s added, claim size %s\n", pvc.Name, quant.String())

		// is claim overage?
		if totalClaimedQuant.Cmp(maxClaimedQuant) == 1 {
			log.Printf("\nClaim overage reached: max %s at %s",
				maxClaimedQuant.String(),
				totalClaimedQuant.String(),
			)
			// trigger action
			log.Println("*** Taking action ***")
		}

	case watch.Modified:
		//log.Printf("Pod %s modified\n", pod.GetName())
	case watch.Deleted:
		quant := pvc.Spec.Resources.Requests[v1.ResourceStorage]
		totalClaimedQuant.Sub(quant)
#+END_SRC

https://github.com/vladimirvivien/k8s-client-examples/blob/master/go/pvcwatch/main.go
